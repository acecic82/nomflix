{"ast":null,"code":"var _jsxFileName = \"/Users/kimwontae/Documents/nomflix/src/Routes/Home/HomePresenter.js\";\nimport React from \"react\";\nimport Proptypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying,\n  popular,\n  upcoming,\n  loading,\n  error\n}) => React.createElement(React.Fragment, null, React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, \"Movies | Nomflix\")), loading ? React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 16\n  }\n}) : React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, nowPlaying && nowPlaying.length > 0 && React.createElement(Section, {\n  title: \"Now Playing\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }\n}, nowPlaying.map(movie => //<span key={movie.id}>{movie.title}</span>\nReact.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  title: movie.original_title,\n  imageUrl: movie.poster_path,\n  rating: movie.vote_average,\n  isMovie: true,\n  year: movie.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }\n}))), upcoming && upcoming.length > 0 && React.createElement(Section, {\n  title: \"Upcoming Movie\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }\n}, upcoming.map(movie => React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  title: movie.original_title,\n  imageUrl: movie.poster_path,\n  rating: movie.vote_average,\n  isMovie: true,\n  year: movie.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }\n}))), popular && popular.length > 0 && React.createElement(Section, {\n  title: \"Popular Movie\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }\n}, popular.map(movie => //<span key={movie.id}>{movie.title}</span>\nReact.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  title: movie.original_title,\n  imageUrl: movie.poster_path,\n  rating: movie.vote_average,\n  isMovie: true,\n  year: movie.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }\n}))), error && React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }\n})), \";\");\n\nHomePresenter.propTypes = {\n  nowPlaying: Proptypes.array,\n  popular: Proptypes.array,\n  upcoming: Proptypes.array,\n  loading: Proptypes.bool.isRequired,\n  error: Proptypes.string\n};\nexport default HomePresenter;","map":{"version":3,"sources":["/Users/kimwontae/Documents/nomflix/src/Routes/Home/HomePresenter.js"],"names":["React","Proptypes","styled","Helmet","Section","Loader","Message","Poster","Container","div","HomePresenter","nowPlaying","popular","upcoming","loading","error","length","map","movie","id","original_title","poster_path","vote_average","release_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \n<>\n    <Helmet>\n        <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : (\n        <Container>\n            \n            {nowPlaying && nowPlaying.length > 0 && (\n            <Section title = \"Now Playing\">\n                {nowPlaying.map(movie => (\n                    //<span key={movie.id}>{movie.title}</span>\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n\n            {upcoming && upcoming.length > 0 && (\n            <Section title = \"Upcoming Movie\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n\n            {popular && popular.length > 0 && (\n            <Section title = \"Popular Movie\">\n                {popular.map(movie => (\n                    //<span key={movie.id}>{movie.title}</span>\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n            {error && <Message color = \"#e74c3c\" text={error} />}\n        </Container>\n        \n    )};\n</>\nHomePresenter.propTypes = {\n    nowPlaying : Proptypes.array,\n    popular : Proptypes.array,\n    upcoming : Proptypes.array,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string\n};\n\nexport default HomePresenter;"]},"metadata":{},"sourceType":"module"}