{"ast":null,"code":"var _jsxFileName = \"/Users/kimwontae/Documents/nomflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport Proptypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => React.createElement(React.Fragment, null, React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, \"TV Shows | Nomflix\")), loading ? React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 16\n  }\n}) : React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, topRated && topRated.length > 0 && React.createElement(Section, {\n  title: \"Top Rated Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }\n}, topRated.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  imageUrl: show.poster_path,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }\n}))), popular && popular.length > 0 && React.createElement(Section, {\n  title: \"Popular Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }\n}, popular.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  imageUrl: show.poster_path,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }\n}))), airingToday && airingToday.length > 0 && React.createElement(Section, {\n  title: \"Airing Today\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }\n}, airingToday.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  imageUrl: show.poster_path,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }\n}))), error && React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }\n})), \";\");\n\nTVPresenter.propTypes = {\n  topRated: Proptypes.array,\n  popular: Proptypes.array,\n  airingToday: Proptypes.array,\n  loading: Proptypes.bool.isRequired,\n  error: Proptypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/Users/kimwontae/Documents/nomflix/src/Routes/TV/TVPresenter.js"],"names":["React","Proptypes","styled","Helmet","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","original_name","poster_path","vote_average","first_air_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \n<>\n    <Helmet>\n        <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : \n        <Container>\n            \n            {topRated && topRated.length > 0 && (\n                <Section title = \"Top Rated Shows\">\n                    {topRated.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title = \"Popular Shows\">\n                    {popular.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title = \"Airing Today\">\n                    {airingToday.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {error && <Message color = \"#e74c3c\" text={error} />}\n        </Container>\n    };\n</>\n\nTVPresenter.propTypes = {\n    topRated : Proptypes.array,\n    popular : Proptypes.array,\n    airingToday : Proptypes.array,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}