{"ast":null,"code":"var _jsxFileName = \"/Users/kimwontae/Documents/nomflix/src/Routes/Detail/DetailContainer.js\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTriggerBtn = event => {\n      this.setState({\n        triggerBtn: 0\n      });\n    };\n\n    this.setTriggerBtn2 = event => {\n      this.setState({\n        triggerBtn: 1\n      });\n    };\n\n    this.setTriggerBtn3 = event => {\n      this.setState({\n        triggerBtn: 2\n      });\n    };\n\n    const {\n      location: {\n        pathname\n      }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie\"),\n      triggerBtn: 0\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      history: {\n        push\n      }\n    } = this.props;\n    const parsedId = parseInt(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    const {\n      isMovie\n    } = this.state;\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({\n          data: result\n        } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({\n          data: result\n        } = await tvApi.showDatail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    const {\n      result,\n      error,\n      loading,\n      triggerBtn\n    } = this.state; //console.log(result);\n\n    return React.createElement(DetailPresenter, {\n      result: result,\n      error: error,\n      loading: loading,\n      triggerBtn: triggerBtn,\n      setTriggerBtn: this.setTriggerBtn,\n      setTriggerBtn2: this.setTriggerBtn2,\n      setTriggerBtn3: this.setTriggerBtn3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kimwontae/Documents/nomflix/src/Routes/Detail/DetailContainer.js"],"names":["React","DetailPresenter","moviesApi","tvApi","Component","constructor","props","setTriggerBtn","event","setState","triggerBtn","setTriggerBtn2","setTriggerBtn3","location","pathname","state","result","error","loading","isMovie","includes","componentDidMount","match","params","id","history","push","parsedId","parseInt","isNaN","data","movieDetail","showDatail","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,WAAjC;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA6B;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAclBC,aAdkB,GAcDC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAG;AAAd,OAAd;AACH,KAhBiB;;AAAA,SAiBlBC,cAjBkB,GAiBAH,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAI;AAAf,OAAd;AACH,KAnBiB;;AAAA,SAoBlBE,cApBkB,GAoBAJ,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAG;AAAd,OAAd;AACH,KAtBiB;;AAEd,UAAM;AACFG,MAAAA,QAAQ,EAAG;AAACC,QAAAA;AAAD;AADT,QAEFR,KAFJ;AAGA,SAAKS,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,IADA;AAETC,MAAAA,KAAK,EAAG,IAFC;AAGTC,MAAAA,OAAO,EAAE,IAHA;AAITC,MAAAA,OAAO,EAAGL,QAAQ,CAACM,QAAT,CAAkB,QAAlB,CAJD;AAKTV,MAAAA,UAAU,EAAG;AALJ,KAAb;AAOH;;AAWD,QAAMW,iBAAN,GAAyB;AACrB,UAAM;AACFC,MAAAA,KAAK,EAAC;AACFC,QAAAA,MAAM,EAAG;AAACC,UAAAA;AAAD;AADP,OADJ;AAIFC,MAAAA,OAAO,EAAG;AAACC,QAAAA;AAAD;AAJR,QAKF,KAAKpB,KALT;AAMA,UAAMqB,QAAQ,GAAGC,QAAQ,CAACJ,EAAD,CAAzB;;AACA,QAAGK,KAAK,CAACF,QAAD,CAAR,EAAmB;AACf,aAAOD,IAAI,CAAC,GAAD,CAAX;AACH;;AACD,UAAM;AAACP,MAAAA;AAAD,QAAY,KAAKJ,KAAvB;AACA,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAG;AACC,UAAGG,OAAH,EAAW;AACP,SAAC;AAACW,UAAAA,IAAI,EAAGd;AAAR,YAAkB,MAAMd,SAAS,CAAC6B,WAAV,CAAsBJ,QAAtB,CAAzB;AACH,OAFD,MAEK;AACD,SAAC;AAACG,UAAAA,IAAI,EAAGd;AAAR,YAAkB,MAAMb,KAAK,CAAC6B,UAAN,CAAiBL,QAAjB,CAAzB;AACH;AAEJ,KAPD,CAOC,MAAK;AACF,WAAKlB,QAAL,CAAc;AAACQ,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KATD,SASQ;AACJ,WAAKR,QAAL,CAAc;AAACS,QAAAA,OAAO,EAAC,KAAT;AAAgBF,QAAAA;AAAhB,OAAd;AACH;AACJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,OAAjB;AAA0BR,MAAAA;AAA1B,QAAwC,KAAKK,KAAnD,CADK,CAEL;;AACA,WACI,oBAAC,eAAD;AACI,MAAA,MAAM,EAAIC,MADd;AAEI,MAAA,KAAK,EAAIC,KAFb;AAGI,MAAA,OAAO,EAAGC,OAHd;AAII,MAAA,UAAU,EAAIR,UAJlB;AAKI,MAAA,aAAa,EAAI,KAAKH,aAL1B;AAMI,MAAA,cAAc,EAAI,KAAKI,cAN3B;AAOI,MAAA,cAAc,EAAI,KAAKC,cAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH;;AAjEuC","sourcesContent":["import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {\n            location : {pathname}\n        } = props\n        this.state = {\n            result : null,\n            error : null,\n            loading: true,\n            isMovie : pathname.includes(\"/movie\"),\n            triggerBtn : 0\n        };\n    };\n    \n    setTriggerBtn = (event) => {\n        this.setState({triggerBtn : 0})\n    }\n    setTriggerBtn2 = (event) => {\n        this.setState({triggerBtn  : 1})\n    }\n    setTriggerBtn3 = (event) => {\n        this.setState({triggerBtn : 2})\n    }\n    async componentDidMount(){\n        const {\n            match:{\n                params : {id}\n            },\n            history : {push},\n        } = this.props;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n        const {isMovie} = this.state;\n        let result = null;\n        try{\n            if(isMovie){\n                ({data : result} = await moviesApi.movieDetail(parsedId));\n            }else{\n                ({data : result} = await tvApi.showDatail(parsedId));\n            }\n            \n        }catch{\n            this.setState({error: \"Can't find anything.\"});\n        }finally{\n            this.setState({loading:false, result })\n        }\n    }\n\n    render() {\n        const { result, error, loading, triggerBtn} = this.state;\n        //console.log(result);\n        return (\n            <DetailPresenter \n                result = {result}\n                error = {error}\n                loading= {loading}\n                triggerBtn = {triggerBtn}\n                setTriggerBtn = {this.setTriggerBtn}\n                setTriggerBtn2 = {this.setTriggerBtn2}\n                setTriggerBtn3 = {this.setTriggerBtn3}\n            />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}