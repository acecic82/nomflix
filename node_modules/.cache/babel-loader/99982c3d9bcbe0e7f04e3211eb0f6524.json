{"ast":null,"code":"var _jsxFileName = \"/Users/kimwontae/Documents/nomflix/src/Routes/Detail/DetailPresenter.js\";\nimport React from \"react\";\nimport Proptypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Background from \"../../assets/imdb.png\";\nimport YouTube from '@u-wave/react-youtube';\nconst Container = styled.div`\n    height : calc(100vh - 50px);\n    width : 100%;\n    position: relative;\n    padding : 50px;\n`;\nconst Backdrop = styled.div`\n    position : absolute;\n    top : 0;\n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    filter : blur(3px);\n    opacity : 0.5;\n    z-index : 0;\n`;\nconst Content = styled.div`\n    display : flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\nconst Cover = styled.div`\n    width:30%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    height: 100%;\n    border-radius: 5px;\n`;\nconst Data = styled.div`\n    width:70%;\n    margin-left : 10px;\n\n`;\nconst Title = styled.h3`\n    font-size : 32px;\n`;\nconst Item = styled.span`\n`;\nconst ItemContainer = styled.div`\n    display : flex;\n    margin:20px 0;\n`;\nconst Divider = styled.div`\n    margin: 0 10px;\n`;\nconst Overview = styled.p`\n    font-size : 12px;\n    opacity:0.7;\n    line-height:1.5;\n    width:50%;\n`;\nconst BtnItem = styled.li`\n  width: 150px;\n  height: 30px;\n  background-color:rgba(20, 20, 20, 0.8);\n  align-items:center;\n  justify-content:center;\n  display:flex;\n  border-bottom: 3px solid \n    ${props => props.current ? \"#3498db\" : \"transparent\"};\n  transition:border-bottom .5s ease-in-out;\n`;\nconst List = styled.ul`\n    text-align:center;\n    display:flex;\n    margin: 20px 20px 0px;\n`;\nconst imDBContainer = {\n  width: 32,\n  height: 16,\n  backgroundImage: `url(${Background})`,\n  backgroundSize: 'cover'\n};\n\nconst testFunc = tar => {\n  var ret = \"\";\n  var trans = parseInt(tar);\n\n  for (var i = 0; i < 5; ++i) {\n    if (trans >= 2) {\n      ret += \"🌕\";\n    } else if (trans >= 1) {\n      ret += \"🌗\";\n    } else {\n      ret += \"🌑\";\n    }\n\n    trans -= 2;\n  }\n\n  return ret;\n};\n\nconst VideoBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:absolute;\n    overFlow-y:scroll;\n`;\nconst ProductionBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:grid;\n    grid-template-columns:130px 130px 130px;\n    overFlow-y:scroll;\n`;\nconst ProductionCompany = styled.ul`\n    width:130px;\n    height:100px;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    text-align : center;\n    margin:10px;\n`;\nconst More = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n`;\n\nconst DetailPresenter = ({\n  result,\n  loading,\n  error,\n  triggerBtn,\n  setTriggerBtn,\n  setTriggerBtn2,\n  setTriggerBtn3\n}) => loading ? React.createElement(React.Fragment, null, React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }\n}, React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 13\n  }\n}, \"Loading | Nomflix\")), React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }\n})) : React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }\n}, React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 13\n  }\n}, React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 17\n  }\n}, result.original_title ? result.original_title : result.original_name, \" | Nomflix\")), React.createElement(Backdrop, {\n  bgImage: result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : require(\"../../assets/noImage.png\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 13\n  }\n}), React.createElement(Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 13\n  }\n}, React.createElement(Cover, {\n  bgImage: result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noImage.png\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 17\n  }\n}), React.createElement(Data, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 17\n  }\n}, React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 21\n  }\n}, result.original_title ? result.original_title : result.original_name), React.createElement(ItemContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 21\n  }\n}, React.createElement(Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 25\n  }\n}, result.release_date && result.release_date.length > 4 ? result.release_date.substring(0, 4) : result.first_air_date && result.first_air_date.length > 4 ? result.first_air_date.substring(0, 4) : result.first_air_date), React.createElement(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 25\n  }\n}, \"\\u25CF\"), React.createElement(Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 25\n  }\n}, result.runtime ? result.runtime : result.episode_run_time, \" min\"), React.createElement(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 25\n  }\n}, \"\\u25CF\"), React.createElement(Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 25\n  }\n}, result.genres && result.genres.map((genre, index) => index + 1 === result.genres.length ? genre.name : `${genre.name} / `)), result.original_title ? React.createElement(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 31\n  }\n}, \"\\u25CF\") : null, result.original_title ? React.createElement(\"button\", {\n  type: \"button\",\n  onClick: e => {\n    window.location.href = `https://www.imdb.com/title/${result.imdb_id}`;\n  },\n  style: imDBContainer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 30\n  }\n}) : null, React.createElement(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 25\n  }\n}, \"\\u25CF\"), React.createElement(Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 25\n  }\n}, testFunc(result.vote_average))), React.createElement(Overview, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 21\n  }\n}, result.overview), React.createElement(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 21\n  }\n}, React.createElement(BtnItem, {\n  current: triggerBtn === 0,\n  onClick: setTriggerBtn,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 25\n  }\n}, \"Video\"), React.createElement(BtnItem, {\n  current: triggerBtn === 1,\n  onClick: setTriggerBtn2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 25\n  }\n}, \"Production\"), React.createElement(BtnItem, {\n  current: triggerBtn === 2,\n  onClick: setTriggerBtn3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 25\n  }\n}, \"More\")), triggerBtn === 0 ? React.createElement(VideoBlock, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 27\n  }\n}, result.videos.results.map((value, index) => React.createElement(YouTube, {\n  width: \"450px\",\n  height: \"200px\",\n  video: `${value.key}`,\n  autoplay: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 25\n  }\n}))) : triggerBtn === 1 ? React.createElement(ProductionBlock, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 27\n  }\n}, result.production_companies.map(value => React.createElement(ProductionCompany, {\n  bgImage: value.logo_path ? `https://image.tmdb.org/t/p/w300${value.logo_path}` : require(\"../../assets/noImage.png\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 29\n  }\n}, value.name))) : triggerBtn === 2 ? React.createElement(More, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 27\n  }\n}, \"more\") : null)));\n\nDetailPresenter.propTypes = {\n  result: Proptypes.object,\n  loading: Proptypes.bool.isRequired,\n  error: Proptypes.string,\n  triggerBtn: Proptypes.number.isRequired,\n  setTriggerBtn: Proptypes.func,\n  setTriggerBtn2: Proptypes.func,\n  setTriggerBtn3: Proptypes.func\n};\nexport default DetailPresenter;","map":{"version":3,"sources":["/Users/kimwontae/Documents/nomflix/src/Routes/Detail/DetailPresenter.js"],"names":["React","Proptypes","styled","Helmet","Loader","Background","YouTube","Container","div","Backdrop","props","bgImage","Content","Cover","Data","Title","h3","Item","span","ItemContainer","Divider","Overview","p","BtnItem","li","current","List","ul","imDBContainer","width","height","backgroundImage","backgroundSize","testFunc","tar","ret","trans","parseInt","i","VideoBlock","ProductionBlock","ProductionCompany","More","DetailPresenter","result","loading","error","triggerBtn","setTriggerBtn","setTriggerBtn2","setTriggerBtn3","original_title","original_name","backdrop_path","require","poster_path","release_date","length","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","name","e","window","location","href","imdb_id","vote_average","overview","videos","results","value","key","production_companies","logo_path","propTypes","object","bool","isRequired","string","number","func"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Loader from \"Components/Loader\"\nimport Background from \"../../assets/imdb.png\"\nimport YouTube from '@u-wave/react-youtube';\n\nconst Container = styled.div`\n    height : calc(100vh - 50px);\n    width : 100%;\n    position: relative;\n    padding : 50px;\n`;\n\nconst Backdrop = styled.div`\n    position : absolute;\n    top : 0;\n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    filter : blur(3px);\n    opacity : 0.5;\n    z-index : 0;\n`;\n\nconst Content = styled.div`\n    display : flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width:70%;\n    margin-left : 10px;\n\n`;\n\nconst Title = styled.h3`\n    font-size : 32px;\n`;\n\n\nconst Item = styled.span`\n`;\n\nconst ItemContainer = styled.div`\n    display : flex;\n    margin:20px 0;\n`;\n\nconst Divider = styled.div`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size : 12px;\n    opacity:0.7;\n    line-height:1.5;\n    width:50%;\n`;\n\nconst BtnItem = styled.li`\n  width: 150px;\n  height: 30px;\n  background-color:rgba(20, 20, 20, 0.8);\n  align-items:center;\n  justify-content:center;\n  display:flex;\n  border-bottom: 3px solid \n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition:border-bottom .5s ease-in-out;\n`;\n\nconst List = styled.ul`\n    text-align:center;\n    display:flex;\n    margin: 20px 20px 0px;\n`;\n\nconst imDBContainer = {\n        width:32,\n        height: 16,\n        backgroundImage: `url(${Background})`,\n        backgroundSize: 'cover'   \n};\n\nconst testFunc = (tar) => {\n    var ret = \"\";\n    var trans = parseInt(tar);\n    for(var i = 0; i <5; ++i){\n        if(trans >= 2){\n            ret += \"🌕\";\n        }\n        else if(trans >= 1){\n            ret += \"🌗\";\n        }\n        else{\n            ret += \"🌑\";\n        }\n        trans -= 2;\n    }\n    return ret;\n}\n\nconst VideoBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:absolute;\n    overFlow-y:scroll;\n`;\n\nconst ProductionBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:grid;\n    grid-template-columns:130px 130px 130px;\n    overFlow-y:scroll;\n`;\n\nconst ProductionCompany = styled.ul`\n    width:130px;\n    height:100px;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    text-align : center;\n    margin:10px;\n`;\n\nconst More = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n`;\n\n\nconst DetailPresenter = ({result, loading, error, triggerBtn, setTriggerBtn, setTriggerBtn2, setTriggerBtn3}) => \n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader /> \n        </> ) : (\n        <Container>\n            <Helmet>\n                <title>{result.original_title\n                            ? result.original_title\n                            : result.original_name} | Nomflix\n                </title>\n            </Helmet>\n            <Backdrop bgImage = {\n                result.backdrop_path ? \n                    `https://image.tmdb.org/t/p/original${result.backdrop_path}` :\n                    require(\"../../assets/noImage.png\")\n            }/>\n            <Content>\n                <Cover bgImage = {\n                result.poster_path ? \n                    `https://image.tmdb.org/t/p/original${result.poster_path}` :\n                    require(\"../../assets/noImage.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        {result.original_title\n                        ? result.original_title\n                        : result.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result.release_date && result.release_date.length > 4\n                            ? result.release_date.substring(0,4)\n                            : result.first_air_date && result.first_air_date.length > 4\n                            ? result.first_air_date.substring(0,4)\n                            : result.first_air_date}\n                        </Item>\n                        <Divider>●</Divider>\n                        <Item>\n                            {result.runtime\n                            ? result.runtime\n                            : result.episode_run_time} min\n                        </Item>\n                        <Divider>●</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) => \n                                index + 1 === result.genres.length ? genre.name : `${genre.name} / `)}\n                        </Item>\n                        {\n                            result.original_title\n                            ? <Divider>●</Divider>\n                            : null\n                        }\n                        {\n                            result.original_title\n                            ?<button type=\"button\" onClick={(e) => {\n                                window.location.href= `https://www.imdb.com/title/${result.imdb_id}`;\n                                }}\n                                style={imDBContainer}>\n                                \n                            </button>\n                            : null\n                        }\n                        <Divider>●</Divider>\n                        <Item>\n                            {\n                                testFunc(result.vote_average)\n                            }\n                        </Item>\n                        \n                    </ItemContainer>\n                    \n                    <Overview>{result.overview}</Overview>\n                    \n                    <List>\n                        <BtnItem current={triggerBtn === 0} onClick={setTriggerBtn}>Video</BtnItem>\n                        <BtnItem current={triggerBtn === 1} onClick={setTriggerBtn2}>Production</BtnItem>\n                        <BtnItem current={triggerBtn === 2} onClick={setTriggerBtn3}>More</BtnItem>\n                    </List>\n\n                    {\n                        triggerBtn === 0\n                        ? <VideoBlock>{result.videos.results.map((value,index) => \n                        <YouTube\n                        width = \"450px\"\n                        height = \"200px\"\n                            video={`${value.key}`}\n                        autoplay = {false}/>\n                        )}</VideoBlock>\n                        : triggerBtn === 1\n                        ? <ProductionBlock>\n                            {result.production_companies.map((value) => \n                            <ProductionCompany bgImage = {value.logo_path ? `https://image.tmdb.org/t/p/w300${value.logo_path}` : require(\"../../assets/noImage.png\")}>\n                                {value.name}\n                            </ProductionCompany>\n                            )}\n\n                        </ProductionBlock>\n                        : triggerBtn === 2\n                        ? <More>more</More>\n                        : null\n                    }\n\n                </Data>\n            </Content>\n        </Container>)\n    \n;\n\nDetailPresenter.propTypes = {\n    result : Proptypes.object,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string,\n    triggerBtn : Proptypes.number.isRequired,\n    setTriggerBtn : Proptypes.func,\n    setTriggerBtn2 : Proptypes.func,\n    setTriggerBtn3 : Proptypes.func\n};\n\nexport default DetailPresenter;"]},"metadata":{},"sourceType":"module"}