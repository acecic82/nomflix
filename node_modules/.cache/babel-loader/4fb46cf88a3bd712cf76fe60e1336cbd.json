{"ast":null,"code":"var _jsxFileName = \"/Users/kimwontae/Documents/nomflix/src/Routes/Search/SearchContainer.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      loading: false,\n      error: null\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.updateTerm = event => {\n      const {\n        target: {\n          value\n        }\n      } = event;\n      this.setState({\n        searchTerm: value\n      });\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const {\n          data: {\n            results: movieResults\n          }\n        } = await moviesApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResults\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResults,\n          tvResults\n        }); //console.log(movieResults, tvResults);\n      } catch {\n        this.setState({\n          error: \"Cant't find results.\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error\n    } = this.state; //console.log(this.state);\n\n    return React.createElement(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      loading: loading,\n      error: error,\n      handleSubmit: this.handleSubmit,\n      updateTerm: this.updateTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kimwontae/Documents/nomflix/src/Routes/Search/SearchContainer.js"],"names":["React","SearchPresenter","moviesApi","tvApi","Component","state","movieResults","tvResults","searchTerm","loading","error","handleSubmit","event","preventDefault","searchByTerm","updateTerm","target","value","setState","data","results","search","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,KAA/B;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA6B;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,OAAO,EAAG,KAJN;AAKJC,MAAAA,KAAK,EAAE;AALH,KADgC;;AAAA,SAcxCC,YAdwC,GAcxBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACL,QAAAA;AAAD,UAAe,KAAKH,KAA1B;;AACA,UAAGG,UAAU,KAAK,EAAlB,EAAsB;AAClB,aAAKM,YAAL;AACH;AACJ,KApBuC;;AAAA,SAsBxCC,UAtBwC,GAsB1BH,KAAD,IAAW;AACpB,YAAM;AAACI,QAAAA,MAAM,EAAG;AAACC,UAAAA;AAAD;AAAV,UAAqBL,KAA3B;AAEA,WAAKM,QAAL,CAAc;AACVV,QAAAA,UAAU,EAACS;AADD,OAAd;AAGH,KA5BuC;;AAAA,SA8BxCH,YA9BwC,GA8BzB,YAAY;AACvB,YAAM;AAACN,QAAAA;AAAD,UAAe,KAAKH,KAA1B;AACA,WAAKa,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAG;AAAX,OAAd;;AACA,UAAG;AACC,cAAM;AACFU,UAAAA,IAAI,EAAG;AAACC,YAAAA,OAAO,EAAEd;AAAV;AADL,YAEH,MAAMJ,SAAS,CAACmB,MAAV,CAAiBb,UAAjB,CAFT;AAGA,cAAO;AACHW,UAAAA,IAAI,EAAG;AAACC,YAAAA,OAAO,EAAGb;AAAX;AADJ,YAEF,MAAMJ,KAAK,CAACkB,MAAN,CAAab,UAAb,CAFX;AAGA,aAAKU,QAAL,CAAc;AACVZ,UAAAA,YADU;AAEVC,UAAAA;AAFU,SAAd,EAPD,CAWA;AACF,OAZD,CAYC,MAAK;AACF,aAAKW,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAdD,SAcQ;AACJ,aAAKQ,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAC;AAAT,SAAd;AACH;AACJ,KAlDuC;AAAA;;AAoDxCa,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAChB,MAAAA,YAAD;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,UAA1B;AAAsCC,MAAAA,OAAtC;AAA+CC,MAAAA;AAA/C,QAAyD,KAAKL,KAApE,CADI,CAEJ;;AAEA,WAAO,oBAAC,eAAD;AACH,MAAA,YAAY,EAAIC,YADb;AAEH,MAAA,SAAS,EAAIC,SAFV;AAGH,MAAA,UAAU,EAAIC,UAHX;AAIH,MAAA,OAAO,EAAIC,OAJR;AAKH,MAAA,KAAK,EAAIC,KALN;AAMH,MAAA,YAAY,EAAI,KAAKC,YANlB;AAOH,MAAA,UAAU,EAAI,KAAKI,UAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH;;AAjEuC","sourcesContent":["import React from \"react\"\nimport SearchPresenter from \"./SearchPresenter\"\nimport {moviesApi, tvApi} from \"api\"\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading : false,\n        error :null,\n\n    };\n\n   // componentDidMount(){\n  //      this.handleSubmit();\n  //  }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm()\n        }\n    };\n\n    updateTerm = (event) => {\n        const {target : {value}} = event;\n\n        this.setState({\n            searchTerm:value\n        })\n    };\n\n    searchByTerm = async () => {\n        const {searchTerm} = this.state;\n        this.setState({loading : true});\n        try{\n            const {\n                data : {results: movieResults}\n            }= await moviesApi.search(searchTerm);\n            const  {\n                data : {results : tvResults}\n            }  = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n           //console.log(movieResults, tvResults);\n        }catch{\n            this.setState({ error: \"Cant't find results.\"});\n        }finally{\n            this.setState({loading:false});\n        }\n    };\n\n    render(){\n        const {movieResults, tvResults, searchTerm, loading, error } = this.state;\n        //console.log(this.state);\n        \n        return <SearchPresenter \n            movieResults = {movieResults}\n            tvResults = {tvResults}\n            searchTerm = {searchTerm}\n            loading = {loading}\n            error = {error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />\n    };\n}"]},"metadata":{},"sourceType":"module"}