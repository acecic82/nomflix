{"version":3,"sources":["assets/noImage.png","assets/imdb.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Containter","Text","props","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","proTypes","PropTypes","number","isRequired","imgetUrl","string","bool","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","BtnItem","imDBContainer","width","height","backgroundImage","Background","backgroundSize","VideoBlock","ProductionBlock","ProductionCompany","More","DetailPresenter","result","triggerBtn","setTriggerBtn","setTriggerBtn2","setTriggerBtn3","backdrop_path","runtime","episode_run_time","genres","genre","index","name","type","onClick","e","window","href","imdb_id","style","tar","ret","trans","parseInt","i","testFunc","overview","videos","video","autoplay","production_companies","logo_path","DetailContainer","includes","match","push","history","parsedId","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6daf8194.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.083cf410.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb.b8cc6f11.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight:600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title : PropTypes.string.isRequired,\n    children : PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display : flex;\n    justify-content:center;\n    font-size:50px;\n    margin-top:20px;\n`;\n\nexport default () => \n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            😍\n        </span>\n    </Container>","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Containter = styled.div`\n    width:100vw;\n    display : flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => \n    <Containter>\n        <Text color = {color}>\n            {text}\n        </Text>\n    </Containter>;\n\nMessage.propTypes = {\n    text : PropTypes.string.isRequired,\n    color : PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\"\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition : opacity 0.1s linear; \n`;\n\n\nconst Rating = styled.span`\n    bottom: 1px;\n    right:5px;\n    position:absolute;\n    opacity: 0;\n    transition : opacity 0.1s linear; \n`;\n\nconst Title = styled.span`\n    display:block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255,255,255,0.5);\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity: 1;\n        }\n        ${Title}{\n            \n        }\n    }\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to = {isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl = {\n                    imageUrl ? \n                        `https://image.tmdb.org/t/p/w300${imageUrl}` \n                        : require(\"../assets/noImage.png\")\n                        }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        💗\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{\n                title.length > 18 ?\n                `${title.substring(0,18)}...` \n                : title\n                }\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.proTypes = {\n    id: PropTypes.number.isRequired,\n    imgetUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating : PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \n<>\n    <Helmet>\n        <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : (\n        <Container>\n            \n            {nowPlaying && nowPlaying.length > 0 && (\n            <Section title = \"Now Playing\">\n                {nowPlaying.map(movie => (\n                    //<span key={movie.id}>{movie.title}</span>\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n\n            {upcoming && upcoming.length > 0 && (\n            <Section title = \"Upcoming Movie\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n\n            {popular && popular.length > 0 && (\n            <Section title = \"Popular Movie\">\n                {popular.map(movie => (\n                    //<span key={movie.id}>{movie.title}</span>\n                    <Poster \n                        key={movie.id} \n                        id = {movie.id}\n                        title = {movie.original_title} \n                        imageUrl = {movie.poster_path}\n                        rating = {movie.vote_average}\n                        isMovie = {true}\n                        year = {movie.release_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n            )}\n            {error && <Message color = \"#e74c3c\" text={error} />}\n        </Container>\n        \n    )};\n</>\nHomePresenter.propTypes = {\n    nowPlaying : Proptypes.array,\n    popular : Proptypes.array,\n    upcoming : Proptypes.array,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"04b12c9be409efc8a90f735c3378662c\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n     nowPlaying : () => api.get(\"movie/now_playing\"),\n     upcoming: () => api.get(\"movie/upcoming\"),\n     popular: () => api.get(\"movie/popular\"),\n     movieDetail: id => api.get(`movie/${id}`, {\n         params : {\n             append_to_response:'videos'\n         }\n     }),\n     search: (term) => api.get(\"search/movie\",{\n         params: {\n             query: encodeURIComponent(term)\n         }\n     })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDatail : id => api.get(`tv/${id}`, {\n        params : {\n            append_to_response : 'videos'\n        }\n    }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params : {\n                query: encodeURIComponent(term)\n            }\n        })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"api\"\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying : null,\n        upcoming: null,\n        popular : null,\n        error : \"\",\n        loading: true\n    };\n\n    async componentDidMount(){\n        try{\n            const{\n                data: {results : nowPlaying}\n            }  = await moviesApi.nowPlaying();\n\n            const {\n                data: {results : upcoming}\n             } = await moviesApi.upcoming();\n            \n             const {\n                data: {results : popular}\n             } = await moviesApi.popular();\n             this.setState({\n                 nowPlaying,\n                 upcoming,\n                 popular\n             })\n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\n\n        console.log(this.state);\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming = {upcoming}\n                popular = {popular}\n                error = {error}\n                loading= {loading}\n            />\n        );\n    }\n}","import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \n<>\n    <Helmet>\n        <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : \n        <Container>\n            \n            {topRated && topRated.length > 0 && (\n                <Section title = \"Top Rated Shows\">\n                    {topRated.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title = \"Popular Shows\">\n                    {popular.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title = \"Airing Today\">\n                    {airingToday.map(show => (\n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date.substring(0,4)}\n                        />\n                        ))}\n                </Section>\n            )}\n            {error && <Message color = \"#e74c3c\" text={error} />}\n        </Container>\n    };\n</>\n\nTVPresenter.propTypes = {\n    topRated : Proptypes.array,\n    popular : Proptypes.array,\n    airingToday : Proptypes.array,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer;","import React from \"react\"\nimport TVPresenter from \"./TVPresenter\"\nimport {tvApi} from \"api\"\n\nexport default class extends React.Component{\n    state = {\n        topRated : null,\n        popular : null,\n        airingToday : null,\n        loading : true,\n        error :null\n    }\n\n    async componentDidMount(){\n        try{\n            \n            const {\n                data:{results:topRated}\n            } = await tvApi.topRated();\n            const {\n                data:{results:popular}\n            } = await tvApi.popular();\n            const {\n                data:{results:airingToday}\n            } = await tvApi.airingToday();\n\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n            \n        }catch{\n            this.setState({\n                error:\"Can't find TV informaiton\"\n            })\n        }finally{\n            this.setState({ loading: false})\n        }\n    }\n\n    render(){\n        const {topRated, popular, airingToday, loading, error } = this.state;\n        console.log(this.state);\n        return <TVPresenter \n            topRated = {topRated}\n            popular = {popular}\n            airingToday = {airingToday}\n            loading = {loading}\n            error = {error}\n        />\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color:white;\n  position: fixed;\n  top:0;\n  left : 0;\n  width:100%;\n  height:50px;\n  display:flex;\n  align-items:center;\n  background-color:rgba(20, 20, 20, 0.8);\n  z-index:10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display:flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid \n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition:border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\n\nconst HeaderC = ({location:{pathname}}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n);\n\nexport default withRouter(HeaderC);","import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Loader from \"Components/Loader\"\nimport Section from \"Components/Section\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div `\n    padding : 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width:100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width:100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults, \n    tvResults, \n    searchTerm, \n    loading, \n    error, \n    handleSubmit, \n    updateTerm\n}) => \n<>\n    <Helmet>\n        <title>Search | Nomflix</title>\n    </Helmet>\n    <Container>\n        \n        <Form onSubmit = {handleSubmit}>\n            <Input placeholder=\"Search Movies or TV Shows...\" \n                    value={searchTerm} \n                    onChange={updateTerm}\n            />\n        </Form>\n        \n        {loading ? <Loader/> : <> \n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => \n                        <Poster \n                            key={movie.id} \n                            id = {movie.id}\n                            title = {movie.original_title} \n                            imageUrl = {movie.poster_path}\n                            rating = {movie.vote_average}\n                            isMovie = {true}\n                            year = {\n                                movie.release_date && movie.release_date.length > 4\n                                ? movie.release_date.substring(0,4)\n                                : movie.release_date}\n                        />  \n                    )}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                    {tvResults.map(show => \n                        <Poster \n                            key={show.id} \n                            id = {show.id}\n                            title = {show.original_name} \n                            imageUrl = {show.poster_path}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date && show.first_air_date.length > 4 \n                                ? show.first_air_date.substring(0,4)\n                                : show.first_air_date}\n                        />\n                    )}\n                </Section>\n            )}\n            {error && <Message color = \"#e74c3c\" text={error} />}\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 &&\n                <Message text = \"Nothing found\" color=\"#95a5a6\" />}\n        </>}\n    </Container>;\n</>\n\nSearchPresenter.propTypes = {\n    movieResults : Proptypes.array,\n    tvResults : Proptypes.array,\n    searchTerm : Proptypes.string,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string,\n    handleSubmit : Proptypes.func.isRequired,\n    updateTerm : Proptypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer\n","import React from \"react\"\nimport SearchPresenter from \"./SearchPresenter\"\nimport {moviesApi, tvApi} from \"api\"\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading : false,\n        error :null,\n\n    };\n\n   // componentDidMount(){\n  //      this.handleSubmit();\n  //  }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm()\n        }\n    };\n\n    updateTerm = (event) => {\n        const {target : {value}} = event;\n\n        this.setState({\n            searchTerm:value\n        })\n    };\n\n    searchByTerm = async () => {\n        const {searchTerm} = this.state;\n        this.setState({loading : true});\n        try{\n            const {\n                data : {results: movieResults}\n            }= await moviesApi.search(searchTerm);\n            const  {\n                data : {results : tvResults}\n            }  = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n           //console.log(movieResults, tvResults);\n        }catch{\n            this.setState({ error: \"Cant't find results.\"});\n        }finally{\n            this.setState({loading:false});\n        }\n    };\n\n    render(){\n        const {movieResults, tvResults, searchTerm, loading, error } = this.state;\n        //console.log(this.state);\n        \n        return <SearchPresenter \n            movieResults = {movieResults}\n            tvResults = {tvResults}\n            searchTerm = {searchTerm}\n            loading = {loading}\n            error = {error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />\n    };\n}","import React from \"react\"\nimport Proptypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from \"react-helmet\"\nimport Loader from \"Components/Loader\"\nimport Background from \"../../assets/imdb.png\"\nimport YouTube from '@u-wave/react-youtube';\n\nconst Container = styled.div`\n    height : calc(100vh - 50px);\n    width : 100%;\n    position: relative;\n    padding : 50px;\n`;\n\nconst Backdrop = styled.div`\n    position : absolute;\n    top : 0;\n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    filter : blur(3px);\n    opacity : 0.5;\n    z-index : 0;\n`;\n\nconst Content = styled.div`\n    display : flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width:70%;\n    margin-left : 10px;\n\n`;\n\nconst Title = styled.h3`\n    font-size : 32px;\n`;\n\n\nconst Item = styled.span`\n`;\n\nconst ItemContainer = styled.div`\n    display : flex;\n    margin:20px 0;\n`;\n\nconst Divider = styled.div`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size : 12px;\n    opacity:0.7;\n    line-height:1.5;\n    width:50%;\n`;\n\nconst BtnItem = styled.li`\n  width: 150px;\n  height: 30px;\n  background-color:rgba(20, 20, 20, 0.8);\n  align-items:center;\n  justify-content:center;\n  display:flex;\n  border-bottom: 3px solid \n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition:border-bottom .5s ease-in-out;\n`;\n\nconst List = styled.ul`\n    text-align:center;\n    display:flex;\n    margin: 20px 20px 0px;\n`;\n\nconst imDBContainer = {\n        width:32,\n        height: 16,\n        backgroundImage: `url(${Background})`,\n        backgroundSize: 'cover'   \n};\n\nconst testFunc = (tar) => {\n    var ret = \"\";\n    var trans = parseInt(tar);\n    for(var i = 0; i <5; ++i){\n        if(trans >= 2){\n            ret += \"🌕\";\n        }\n        else if(trans >= 1){\n            ret += \"🌗\";\n        }\n        else{\n            ret += \"🌑\";\n        }\n        trans -= 2;\n    }\n    return ret;\n}\n\nconst VideoBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:absolute;\n    overFlow-y:scroll;\n`;\n\nconst ProductionBlock = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n    display:grid;\n    grid-template-columns:130px 130px 130px;\n    overFlow-y:scroll;\n`;\n\nconst ProductionCompany = styled.ul`\n    width:130px;\n    height:100px;\n    background-image : url(${props => props.bgImage});\n    background-position : center center;\n    background-size : cover;\n    text-align : center;\n    margin:10px;\n`;\n\nconst More = styled.div`\n    margin : 0px 20px;\n    width: 450px;\n    height: 200px;\n    background-color:rgba(20, 20, 20, 0.8);\n`;\n\n\nconst DetailPresenter = ({result, loading, error, triggerBtn, setTriggerBtn, setTriggerBtn2, setTriggerBtn3}) => \n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader /> \n        </> ) : (\n        <Container>\n            <Helmet>\n                <title>{result.original_title\n                            ? result.original_title\n                            : result.original_name} | Nomflix\n                </title>\n            </Helmet>\n            <Backdrop bgImage = {\n                result.backdrop_path ? \n                    `https://image.tmdb.org/t/p/original${result.backdrop_path}` :\n                    require(\"../../assets/noImage.png\")\n            }/>\n            <Content>\n                <Cover bgImage = {\n                result.poster_path ? \n                    `https://image.tmdb.org/t/p/original${result.poster_path}` :\n                    require(\"../../assets/noImage.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        {result.original_title\n                        ? result.original_title\n                        : result.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result.release_date && result.release_date.length > 4\n                            ? result.release_date.substring(0,4)\n                            : result.first_air_date && result.first_air_date.length > 4\n                            ? result.first_air_date.substring(0,4)\n                            : result.first_air_date}\n                        </Item>\n                        <Divider>●</Divider>\n                        <Item>\n                            {result.runtime\n                            ? result.runtime\n                            : result.episode_run_time} min\n                        </Item>\n                        <Divider>●</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) => \n                                index + 1 === result.genres.length ? genre.name : `${genre.name} / `)}\n                        </Item>\n                        {\n                            result.original_title\n                            ? <Divider>●</Divider>\n                            : null\n                        }\n                        {\n                            result.original_title\n                            ?<button type=\"button\" onClick={(e) => {\n                                window.location.href= `https://www.imdb.com/title/${result.imdb_id}`;\n                                }}\n                                style={imDBContainer}>\n                                \n                            </button>\n                            : null\n                        }\n                        <Divider>●</Divider>\n                        <Item>\n                            {\n                                testFunc(result.vote_average)\n                            }\n                        </Item>\n                        \n                    </ItemContainer>\n                    \n                    <Overview>{result.overview}</Overview>\n                    \n                    <List>\n                        <BtnItem current={triggerBtn === 0} onClick={setTriggerBtn}>Video</BtnItem>\n                        <BtnItem current={triggerBtn === 1} onClick={setTriggerBtn2}>Production</BtnItem>\n                        <BtnItem current={triggerBtn === 2} onClick={setTriggerBtn3}>More</BtnItem>\n                    </List>\n\n                    {\n                        triggerBtn === 0\n                        ? <VideoBlock>{result.videos.results.map((value,index) => \n                        <YouTube\n                        width = \"450px\"\n                        height = \"200px\"\n                            video={`${value.key}`}\n                        autoplay = {false}/>\n                        )}</VideoBlock>\n                        : triggerBtn === 1\n                        ? <ProductionBlock>\n                            {result.production_companies.map((value) => \n                            <ProductionCompany bgImage = {value.logo_path ? `https://image.tmdb.org/t/p/w300${value.logo_path}` : require(\"../../assets/noImage.png\")}>\n                                {value.name}\n                            </ProductionCompany>\n                            )}\n\n                        </ProductionBlock>\n                        : triggerBtn === 2\n                        ? <More>more</More>\n                        : null\n                    }\n\n                </Data>\n            </Content>\n        </Container>)\n    \n;\n\nDetailPresenter.propTypes = {\n    result : Proptypes.object,\n    loading : Proptypes.bool.isRequired,\n    error : Proptypes.string,\n    triggerBtn : Proptypes.number.isRequired,\n    setTriggerBtn : Proptypes.func,\n    setTriggerBtn2 : Proptypes.func,\n    setTriggerBtn3 : Proptypes.func\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {\n            location : {pathname}\n        } = props\n        this.state = {\n            result : null,\n            error : null,\n            loading: true,\n            isMovie : pathname.includes(\"/movie\"),\n            triggerBtn : 0\n        };\n    };\n    \n    setTriggerBtn = (event) => {\n        this.setState({triggerBtn : 0})\n    }\n    setTriggerBtn2 = (event) => {\n        this.setState({triggerBtn  : 1})\n    }\n    setTriggerBtn3 = (event) => {\n        this.setState({triggerBtn : 2})\n    }\n    async componentDidMount(){\n        const {\n            match:{\n                params : {id}\n            },\n            history : {push},\n        } = this.props;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n        const {isMovie} = this.state;\n        let result = null;\n        try{\n            if(isMovie){\n                ({data : result} = await moviesApi.movieDetail(parsedId));\n            }else{\n                ({data : result} = await tvApi.showDatail(parsedId));\n            }\n            \n        }catch{\n            this.setState({error: \"Can't find anything.\"});\n        }finally{\n            this.setState({loading:false, result })\n        }\n    }\n\n    render() {\n        const { result, error, loading, triggerBtn} = this.state;\n        //console.log(result);\n        return (\n            <DetailPresenter \n                result = {result}\n                error = {error}\n                loading= {loading}\n                triggerBtn = {triggerBtn}\n                setTriggerBtn = {this.setTriggerBtn}\n                setTriggerBtn2 = {this.setTriggerBtn2}\n                setTriggerBtn3 = {this.setTriggerBtn3}\n            />\n        );\n    }\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\"\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\"\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component = {Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n//<Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        padding-top:50px;\n    }\n`;\n\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <Router />\n      <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App.js';\nimport \"./api.js\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}